"use strict";
var config_1 = require('../config');
var cli_1 = require('../cli');
var binaries_1 = require('../binaries');
exports.OUT_DIR = 'out_dir';
exports.SELENIUM_PORT = 'seleniumPort';
exports.IGNORE_SSL = 'ignore_ssl';
exports.PROXY = 'proxy';
exports.ALTERNATE_CDN = 'alternate_cdn';
exports.STANDALONE = 'standalone';
exports.CHROME = 'chrome';
exports.IE = 'ie';
exports.IE32 = 'ie32';
exports.VERSIONS_CHROME = 'versions.chrome';
exports.VERSIONS_STANDALONE = 'versions.standalone';
exports.VERSIONS_IE = 'versions.ie';
exports.CHROME_LOGS = 'chrome_logs';
/**
 * The options used by the commands.
 */
var opts = {};
opts[exports.OUT_DIR] = new cli_1.Option(exports.OUT_DIR, 'Location to output/expect', 'string', config_1.Config.getSeleniumDir());
opts[exports.SELENIUM_PORT] = new cli_1.Option(exports.SELENIUM_PORT, 'Optional port for the selenium standalone server', 'string');
opts[exports.IGNORE_SSL] = new cli_1.Option(exports.IGNORE_SSL, 'Ignore SSL certificates', 'boolean', false);
opts[exports.PROXY] = new cli_1.Option(exports.PROXY, 'Proxy to use for the install or update command', 'string');
opts[exports.ALTERNATE_CDN] = new cli_1.Option(exports.ALTERNATE_CDN, 'Alternate CDN to binaries', 'string');
opts[exports.STANDALONE] = new cli_1.Option(exports.STANDALONE, 'Install or update selenium standalone', 'boolean', binaries_1.StandAlone.isDefault);
opts[exports.CHROME] = new cli_1.Option(exports.CHROME, 'Install or update chromedriver', 'boolean', binaries_1.ChromeDriver.isDefault);
opts[exports.IE] = new cli_1.Option(exports.IE, 'Install or update ie driver', 'boolean', binaries_1.IEDriver.isDefault);
opts[exports.IE32] = new cli_1.Option(exports.IE32, 'Install or update 32-bit ie driver', 'boolean', binaries_1.IEDriver.isDefault);
opts[exports.VERSIONS_CHROME] = new cli_1.Option(exports.VERSIONS_CHROME, 'Optional chrome driver version', 'string', binaries_1.ChromeDriver.versionDefault);
opts[exports.VERSIONS_STANDALONE] = new cli_1.Option(exports.VERSIONS_STANDALONE, 'Optional seleniuim standalone server version', 'string', binaries_1.StandAlone.versionDefault);
opts[exports.VERSIONS_IE] = new cli_1.Option(exports.VERSIONS_IE, 'Optional internet explorer driver version', 'string', binaries_1.IEDriver.versionDefault);
opts[exports.CHROME_LOGS] = new cli_1.Option(exports.CHROME_LOGS, 'File path to chrome logs', 'string', undefined);
exports.Opts = opts;
