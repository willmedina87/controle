"use strict";
var fs = require('fs');
var path = require('path');
/**
 * The configuration for webdriver-manager.
 */
var Config = (function () {
    function Config() {
    }
    Config.getFile = function (jsonFile) {
        try {
            Config.isLocalVersion = fs.statSync(Config.localInstall).isDirectory();
        }
        catch (e) {
        }
        // project version
        if (Config.folder === Config.nodeModuleName) {
            return path.resolve('built', jsonFile);
        }
        else if (Config.isLocalVersion) {
            return path.resolve(Config.localInstall, 'built', jsonFile);
        }
        else {
            return path.resolve(Config.dir, '..', jsonFile);
        }
    };
    Config.getFolder = function (folder) {
        try {
            Config.isLocalVersion = fs.statSync(Config.localInstall).isDirectory();
        }
        catch (e) {
        }
        // project version
        if (Config.folder === Config.nodeModuleName) {
            return path.resolve(folder);
        }
        else if (Config.isLocalVersion) {
            return path.resolve(Config.localInstall, folder);
        }
        else {
            return path.resolve(Config.dir, folder);
        }
    };
    Config.getSeleniumDir = function () {
        return Config.getFolder('selenium/');
    };
    Config.getBaseDir = function () {
        return Config.getFolder('/');
    };
    /**
     * Get the binary versions from the configuration file.
     * @returns A map of the versions defined in the configuration file.
     */
    Config.binaryVersions = function () {
        var configFile = require(Config.getFile(Config.configFile));
        var configVersions = {};
        configVersions.selenium = configFile.webdriverVersions.selenium;
        configVersions.chrome = configFile.webdriverVersions.chromedriver;
        configVersions.ie = configFile.webdriverVersions.iedriver;
        return configVersions;
    };
    /**
     * Get the CDN urls from the configuration file.
     * @returns A map of the CDN versions defined in the configuration file.
     */
    Config.cdnUrls = function () {
        var configFile = require(Config.getFile(Config.configFile));
        var configCdnUrls = {};
        configCdnUrls.selenium = configFile.cdnUrls.selenium;
        configCdnUrls.chrome = configFile.cdnUrls.chromedriver;
        configCdnUrls.ie = configFile.cdnUrls.iedriver;
        return configCdnUrls;
    };
    /**
     * Get the package version.
     */
    Config.getVersion = function () {
        var packageFile = require(Config.getFile(Config.packageFile));
        return packageFile.version;
    };
    Config.configFile = 'config.json';
    Config.packageFile = 'package.json';
    Config.cwd = process.cwd();
    Config.nodeModuleName = 'webdriver-manager';
    Config.localInstall = path.resolve(Config.cwd, 'node_modules', Config.nodeModuleName);
    Config.parentPath = path.resolve(Config.cwd, '..');
    Config.dir = __dirname;
    Config.folder = Config.cwd.replace(Config.parentPath, '').substring(1);
    Config.isProjectVersion = Config.folder === Config.nodeModuleName;
    Config.isLocalVersion = false;
    return Config;
}());
exports.Config = Config;
